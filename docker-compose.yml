services:
  db:
    image: postgres:15
    container_name: ${POSTGRES_CONTAINER}
    ports:
      - "${POSTGRES_PORT}:5432"
    env_file:
      - ./.env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

  backend:
    build:
      context: ./backend
    image: ${BACKEND_IMAGE}
    container_name: ${BACKEND_CONTAINER}
    ports:
      - "${BACKEND_PORT}:8000"
    env_file:
      - ./.env
    environment:
      DATABASE_URL: ${DATABASE_URL}
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
      args:
        VITE_MODE: ${VITE_MODE}
    image: ${FRONTEND_IMAGE}
    container_name: ${FRONTEND_CONTAINER}
    ports:
      - "${FRONTEND_PORT}:80"
    env_file:
      - ./.env
    depends_on:
      - backend

volumes:
  postgres_data:
